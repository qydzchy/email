<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.email.mapper.MailboxTaskEmailPullMapper">
    
    <resultMap type="MailboxTaskEmailPull" id="MailboxTaskEmailPullResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="task_id"    />
        <result property="uid"    column="uid"    />
        <result property="fromer"    column="fromer"    />
        <result property="receiver"    column="receiver"    />
        <result property="bcc"    column="bcc"    />
        <result property="cc"    column="cc"    />
        <result property="folder"    column="folder"    />
        <result property="folderId"    column="folder_id"    />
        <result property="title"    column="title"    />
        <result property="emlPath"    column="eml_path"    />
        <result property="readFlag"    column="read_flag"    />
        <result property="pendingFlag"    column="pending_flag"    />
        <result property="pendingTime"    column="pending_time"    />
        <result property="fixedFlag"    column="fixed_flag"    />
        <result property="spamFlag"    column="spam_flag"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectMailboxTaskEmailPullVo">
        select id, task_id, uid, fromer, receiver, bcc, cc, folder, folder_id, title, eml_path, read_flag, pending_flag, pending_time, fixed_flag, spam_flag, del_flag, create_by, create_time, update_by, update_time from mailbox_task_email_pull
    </sql>

    <select id="selectMailboxTaskEmailPullList" parameterType="MailboxTaskEmailPull" resultMap="MailboxTaskEmailPullResult">
        <include refid="selectMailboxTaskEmailPullVo"/>
        <where>  
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="uid != null  and uid != ''"> and uid = #{uid}</if>
            <if test="fromer != null  and fromer != ''"> and fromer = #{fromer}</if>
            <if test="receiver != null  and receiver != ''"> and receiver = #{receiver}</if>
            <if test="bcc != null  and bcc != ''"> and bcc = #{bcc}</if>
            <if test="cc != null  and cc != ''"> and cc = #{cc}</if>
            <if test="folder != null  and folder != ''"> and folder = #{folder}</if>
            <if test="folderId != null "> and folder_id = #{folderId}</if>
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="emlPath != null  and emlPath != ''"> and eml_path = #{emlPath}</if>
            <if test="readFlag != null "> and read_flag = #{readFlag}</if>
            <if test="pendingFlag != null "> and pending_flag = #{pendingFlag}</if>
            <if test="pendingTime != null "> and pending_time = #{pendingTime}</if>
            <if test="fixedFlag != null "> and fixed_flag = #{fixedFlag}</if>
            <if test="spamFlag != null "> and spam_flag = #{spamFlag}</if>
        </where>
    </select>
    
    <select id="selectMailboxTaskEmailPullById" parameterType="Long" resultMap="MailboxTaskEmailPullResult">
        <include refid="selectMailboxTaskEmailPullVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertMailboxTaskEmailPull" parameterType="MailboxTaskEmailPull" useGeneratedKeys="true" keyProperty="id">
        insert into mailbox_task_email_pull
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">task_id,</if>
            <if test="uid != null and uid != ''">uid,</if>
            <if test="fromer != null and fromer != ''">fromer,</if>
            <if test="receiver != null and receiver != ''">receiver,</if>
            <if test="bcc != null">bcc,</if>
            <if test="cc != null">cc,</if>
            <if test="folder != null">folder,</if>
            <if test="folderId != null">folder_id,</if>
            <if test="title != null and title != ''">title,</if>
            <if test="emlPath != null and emlPath != ''">eml_path,</if>
            <if test="readFlag != null">read_flag,</if>
            <if test="pendingFlag != null">pending_flag,</if>
            <if test="pendingTime != null">pending_time,</if>
            <if test="fixedFlag != null">fixed_flag,</if>
            <if test="spamFlag != null">spam_flag,</if>
            <if test="delFlag != null and delFlag != ''">del_flag,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="uid != null and uid != ''">#{uid},</if>
            <if test="fromer != null and fromer != ''">#{fromer},</if>
            <if test="receiver != null and receiver != ''">#{receiver},</if>
            <if test="bcc != null">#{bcc},</if>
            <if test="cc != null">#{cc},</if>
            <if test="folder != null">#{folder},</if>
            <if test="folderId != null">#{folderId},</if>
            <if test="title != null and title != ''">#{title},</if>
            <if test="emlPath != null and emlPath != ''">#{emlPath},</if>
            <if test="readFlag != null">#{readFlag},</if>
            <if test="pendingFlag != null">#{pendingFlag},</if>
            <if test="pendingTime != null">#{pendingTime},</if>
            <if test="fixedFlag != null">#{fixedFlag},</if>
            <if test="spamFlag != null">#{spamFlag},</if>
            <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateMailboxTaskEmailPull" parameterType="MailboxTaskEmailPull">
        update mailbox_task_email_pull
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="uid != null and uid != ''">uid = #{uid},</if>
            <if test="fromer != null and fromer != ''">fromer = #{fromer},</if>
            <if test="receiver != null and receiver != ''">receiver = #{receiver},</if>
            <if test="bcc != null">bcc = #{bcc},</if>
            <if test="cc != null">cc = #{cc},</if>
            <if test="folder != null">folder = #{folder},</if>
            <if test="folderId != null">folder_id = #{folderId},</if>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="emlPath != null and emlPath != ''">eml_path = #{emlPath},</if>
            <if test="readFlag != null">read_flag = #{readFlag},</if>
            <if test="pendingFlag != null">pending_flag = #{pendingFlag},</if>
            <if test="pendingTime != null">pending_time = #{pendingTime},</if>
            <if test="fixedFlag != null">fixed_flag = #{fixedFlag},</if>
            <if test="spamFlag != null">spam_flag = #{spamFlag},</if>
            <if test="delFlag != null and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMailboxTaskEmailPullById" parameterType="Long">
        delete from mailbox_task_email_pull where id = #{id}
    </delete>

    <delete id="deleteMailboxTaskEmailPullByIds" parameterType="String">
        delete from mailbox_task_email_pull where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>