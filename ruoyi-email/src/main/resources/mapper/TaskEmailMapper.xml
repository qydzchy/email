<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.email.mapper.TaskEmailMapper">

    <resultMap type="TaskEmail" id="TaskEmailResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="task_id"    />
        <result property="type"    column="type"    />
        <result property="uid"    column="uid"    />
        <result property="fromer"    column="fromer"    />
        <result property="receiver"    column="receiver"    />
        <result property="bcc"    column="bcc"    />
        <result property="cc"    column="cc"    />
        <result property="folder"    column="folder"    />
        <result property="folderId"    column="folder_id"    />
        <result property="title"    column="title"    />
        <result property="sendDate"    column="send_date"    />
        <result property="emlPath"    column="eml_path"    />
        <result property="status"    column="status"    />
        <result property="traceFlag"    column="trace_flag"    />
        <result property="delayedTxFlag"    column="delayed_tx_flag"    />
        <result property="recipientTimeZone"    column="recipient_time_zone"    />
        <result property="recipientLocalTime"    column="recipient_local_time"    />
        <result property="readFlag"    column="read_flag"    />
        <result property="pendingFlag"    column="pending_flag"    />
        <result property="pendingTime"    column="pending_time"    />
        <result property="fixedFlag"    column="fixed_flag"    />
        <result property="spamFlag"    column="spam_flag"    />
        <result property="messageId"    column="message_id"    />
        <result property="inReplyTo"    column="in_reply_to"    />
        <result property="reference"    column="reference"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createId"    column="create_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateId"    column="update_id"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectTaskEmailVo">
        select id, task_id, type, uid, fromer, receiver, bcc, cc, folder, folder_id, title, send_date, eml_path, status, trace_flag, delayed_tx_flag, recipient_time_zone, recipient_local_time, read_flag, pending_flag, pending_time, fixed_flag, spam_flag, message_id, in_reply_to, reference, del_flag, create_id, create_by, create_time, update_id, update_by, update_time from mailbox_task_email
    </sql>

    <select id="selectTaskEmailList" parameterType="TaskEmail" resultMap="TaskEmailResult">
        <include refid="selectTaskEmailVo"/>
        <where>
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="uid != null  and uid != ''"> and uid = #{uid}</if>
            <if test="fromer != null  and fromer != ''"> and fromer = #{fromer}</if>
            <if test="receiver != null  and receiver != ''"> and receiver = #{receiver}</if>
            <if test="bcc != null  and bcc != ''"> and bcc = #{bcc}</if>
            <if test="cc != null  and cc != ''"> and cc = #{cc}</if>
            <if test="folder != null  and folder != ''"> and folder = #{folder}</if>
            <if test="folderId != null "> and folder_id = #{folderId}</if>
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="sendDate != null "> and send_date = #{sendDate}</if>
            <if test="emlPath != null  and emlPath != ''"> and eml_path = #{emlPath}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="traceFlag != null "> and trace_flag = #{traceFlag}</if>
            <if test="delayedTxFlag != null "> and delayed_tx_flag = #{delayedTxFlag}</if>
            <if test="recipientTimeZone != null  and recipientTimeZone != ''"> and recipient_time_zone = #{recipientTimeZone}</if>
            <if test="recipientLocalTime != null "> and recipient_local_time = #{recipientLocalTime}</if>
            <if test="readFlag != null "> and read_flag = #{readFlag}</if>
            <if test="pendingFlag != null "> and pending_flag = #{pendingFlag}</if>
            <if test="pendingTime != null "> and pending_time = #{pendingTime}</if>
            <if test="fixedFlag != null "> and fixed_flag = #{fixedFlag}</if>
            <if test="spamFlag != null "> and spam_flag = #{spamFlag}</if>
            <if test="messageId != null  and messageId != ''"> and message_id = #{messageId}</if>
            <if test="inReplyTo != null  and inReplyTo != ''"> and in_reply_to = #{inReplyTo}</if>
            <if test="reference != null  and reference != ''"> and reference = #{reference}</if>
            <if test="createId != null "> and create_id = #{createId}</if>
            <if test="updateId != null "> and update_id = #{updateId}</if>
        </where>
    </select>

    <select id="selectTaskEmailById" parameterType="Long" resultMap="TaskEmailResult">
        <include refid="selectTaskEmailVo"/>
        where id = #{id}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*) from mailbox_task_email mte
        where task_id in
        <foreach collection="taskIdList" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
        and status in
        <foreach collection="statusList" item="status" open="(" separator="," close=")">
            #{status}
        </foreach>
        <if test="attachmentFlag != null and attachmentFlag == true">
            AND EXISTS (
            SELECT 1
            FROM mailbox_task_email_attachment mtea
            WHERE mte.id = mtea.email_id
            )
        </if>
        <if test="labelId != null">
            AND EXISTS (
            SELECT 1
            FROM mailbox_task_email_label mtel
            WHERE mte.id = mtel.email_id AND mtel.label_id = #{labelId}
            )
        </if>
        <if test="type != null">and type = #{type}</if>
        <if test="readFlag != null "> and read_flag = #{readFlag}</if>
        <if test="pendingFlag != null "> and pending_flag = #{pendingFlag}</if>
        <if test="spamFlag != null "> and spam_flag = #{spamFlag}</if>
        <if test="traceFlag != null "> and trace_flag = #{traceFlag}</if>
        <if test="fixedFlag != null and fixedFlag == true"> and fixed_flag = true</if>
        <if test="folderId != null "> and folder_id = #{folderId}</if>
        <if test="customerFlag != null and customerFlag == true">
            AND EXISTS (
            SELECT 1
            FROM customer_customer cc
            LEFT JOIN customer_customer_contact ccc ON cc.id = ccc.customer_id
            WHERE mte.fromer = ccc.email
            AND cc.create_id = #{createId}
            AND cc.del_flag = '0'
            AND ccc.del_flag = '0'
            )
        </if>
        and del_flag = #{delFlag}
    </select>

    <select id="selectTaskEmailPage" resultType="com.ruoyi.email.domain.vo.EmailListVO">
        SELECT
        mte.id, mte.type, mte.status, mte.task_id as taskId, mte.fromer, mte.receiver, mte.folder_id as folderId, mte.title,
        mte.send_date as sendDate, mte.read_flag as readFlag, mte.pending_flag as pendingFlag, mte.pending_time as pendingTime,
        mte.fixed_flag as fixedFlag, mte.spam_flag as spamFlag, mtec.content, ccc.nick_name as nickName
        FROM mailbox_task_email mte
        LEFT JOIN mailbox_task_email_content mtec ON mte.id = mtec.email_id
        LEFT JOIN (
        SELECT customer_id, email, MIN(nick_name) as nick_name
        FROM customer_customer_contact where del_flag = '0'
        GROUP BY email
        ) ccc ON mte.fromer = ccc.email
        LEFT JOIN customer_customer cc ON ccc.customer_id = cc.id AND cc.create_id = #{createId} AND cc.del_flag = '0'
        WHERE
        mte.task_id in
        <foreach collection="taskIdList" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
        AND mte.status in
        <foreach collection="statusList" item="status" open="(" separator="," close=")">
            #{status}
        </foreach>
        <if test="attachmentFlag != null and attachmentFlag == true">
            AND EXISTS (
            SELECT 1
            FROM mailbox_task_email_attachment mtea
            WHERE mte.id = mtea.email_id
            )
        </if>
        <if test="labelId != null">
            AND EXISTS (
            SELECT 1
            FROM mailbox_task_email_label mtel
            WHERE mte.id = mtel.email_id AND mtel.label_id = #{labelId}
            )
        </if>
        <if test="type != null">AND mte.type = #{type}</if>
        <if test="readFlag != null"> AND mte.read_flag = #{readFlag}</if>
        <if test="pendingFlag != null"> AND mte.pending_flag = #{pendingFlag}</if>
        <if test="spamFlag != null"> AND mte.spam_flag = #{spamFlag}</if>
        <if test="traceFlag != null"> AND mte.trace_flag = #{traceFlag}</if>
        <if test="fixedFlag != null and fixedFlag == true"> AND fixed_flag = true</if>
        <if test="folderId != null"> AND mte.folder_id = #{folderId}</if>
        <if test="customerFlag != null and customerFlag == true">
            AND EXISTS (
            SELECT 1
            FROM customer_customer cc
            LEFT JOIN customer_customer_contact ccc ON cc.id = ccc.customer_id
            WHERE mte.fromer = ccc.email
            AND cc.create_id = #{createId}
            AND cc.del_flag = '0'
            AND ccc.del_flag = '0'
            )
        </if>
        AND mte.del_flag = #{delFlag}
        ORDER BY mte.send_date DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getTaskEmailById" resultMap="TaskEmailResult">
        <include refid="selectTaskEmailVo"/>
        where id = #{id} and create_id = #{createId} and del_flag = '0'
    </select>

    <select id="getUidsByTaskId" resultType="java.lang.String">
        select uid from mailbox_task_email where task_id=#{taskId} and type = 1 and del_flag = '0'
    </select>

    <select id="getEmailQuantityByIds" resultType="java.util.Map">
        select task_id as taskId, count(*) as quantity from mailbox_task_email where task_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and type = #{type}
        and del_flag = '0'
        group by task_id
    </select>

    <select id="getLatestReference" resultType="java.lang.String">
        select reference from mailbox_task_email where reference like '${reference}%' order by send_date desc limit 1;
    </select>
    <select id="selectTaskEmailByMessageIdAndInReplyTo"
            resultType="com.ruoyi.email.domain.vo.EmailListVO">
        select mte.id, mte.task_id as taskId, mte.uid, mte.fromer, mte.receiver, mte.bcc, mte.cc, mte.folder, mte.folder_id as folderId, mte.title, mte.send_date as sendDate, mte.eml_path as emlPath, mte.read_flag as readFlag,
        mte.pending_flag as pendingFlag, mte.pending_time as pendingTime, mte.fixed_flag as fixedFlag, mte.spam_flag as spamFlag, mte.message_id as messageId, mte.in_reply_to as inReplyTo, mte.reference, mtec.content from mailbox_task_email mte
        left join mailbox_task_email_content mtec on mte.id = mtec.email_id
        where
            (
                mte.message_id in
                <foreach collection="latestReferenceList" item="messageId" open="(" separator="," close=")">
                    #{messageId}
                </foreach>
            or mte.in_reply_to in
                <foreach collection="latestReferenceList" item="inReplyTo" open="(" separator="," close=")">
                    #{inReplyTo}
                </foreach>
            ) and mte.del_flag = '0'
        order by mte.send_date desc
    </select>

    <select id="countUnReadEmailNum" resultType="com.ruoyi.email.domain.vo.MenuInboxTaskCountVO">
        SELECT
            te.task_id AS taskId,
            COUNT( te.id ) AS count
        FROM
            mailbox_task t
            LEFT JOIN mailbox_task_email te ON t.id = te.task_id
        WHERE
            te.read_flag = 0
          AND te.type = 1
          AND te.folder_id = -1
          AND te.spam_flag = 0
          AND te.del_flag = '0'
          AND t.create_id = #{createId}
          AND t.del_flag = '0'
        GROUP BY
            te.task_id;
    </select>

    <select id="countPendingMailNum" resultType="java.lang.Integer">
        SELECT
            COUNT(te.id)
        FROM
            mailbox_task t
            LEFT JOIN mailbox_task_email te ON t.id = te.task_id
        WHERE
            te.pending_flag = 1
          AND te.folder_id = -1
          AND te.spam_flag = 0
          AND te.del_flag = '0'
          AND t.create_id = #{createId}
          AND t.del_flag = '0'
    </select>

    <select id="countDraftsNum" resultType="java.lang.Integer">
        SELECT
            COUNT(te.id)
        FROM
            mailbox_task t
            LEFT JOIN mailbox_task_email te ON t.id = te.task_id
        WHERE
            te.status in (1, 2, 4)  -- 草稿箱
          AND te.type = 2
          AND te.del_flag = '0'  -- 未被删除的邮件
          AND t.create_id = #{createId}
          AND t.del_flag = '0'
    </select>

    <select id="customerEmailCount" resultType="java.lang.Integer">
        select count(DISTINCT(mte.id)) from customer_customer_contact ccc
        left join mailbox_task_email mte on ccc.email = mte.fromer or mte.receiver like concat('%"email":"', ccc.email ,'"%') or mte.bcc like concat('%"email":"', ccc.email ,'"%') or mte.cc like concat('%"email":"', ccc.email ,'"%')
        left join mailbox_task mt on mte.task_id = mt.id
        LEFT JOIN mailbox_task_email_content mtec ON mte.id = mtec.email_id
        WHERE
        ccc.customer_id = #{customerId}
        AND mt.create_id = #{createId}
        AND mt.del_flag = '0'
        AND ccc.del_flag = '0'
        AND mte.del_flag = '0'
        <if test="attachmentFlag != null and attachmentFlag == true">
            AND EXISTS (
            SELECT 1
            FROM mailbox_task_email_attachment mtea
            WHERE mte.id = mtea.email_id
            )
        </if>
        <if test="fixedFlag != null and fixedFlag == true">
            AND mte.fixed_flag = true
        </if>
        <if test="type != null">
            AND mte.type = #{type}
        </if>
        <!-- 联系人筛选 -->
        <if test="emailList != null and emailList.size() > 0">
            AND (
            mte.fromer IN
            <foreach item="email" collection="emailList" open="(" separator="," close=")">
                #{email}
            </foreach>
            OR
            <foreach item="email" collection="emailList" separator=" OR ">
                mte.receiver LIKE concat( '%"email":"', #{email}, '"%' )
                OR mte.bcc LIKE concat( '%"email":"', #{email}, '"%' )
                OR mte.cc LIKE concat( '%"email":"', #{email}, '"%' )
            </foreach>
            )
        </if>
        <!-- 标签筛选 -->
        <if test="labelIdList != null and labelIdList.size() > 0">
            AND EXISTS (
            SELECT 1
            FROM mailbox_task_email_label mtl
            WHERE mte.id = mtl.email_id
            AND mtl.label_id IN
            <foreach item="labelId" collection="labelIdList" open="(" separator="," close=")">
                #{labelId}
            </foreach>
            )
        </if>
        <!-- 邮件标题、正文、附件名筛选 -->
        <if test="keyword != null and keyword != ''">
            <if test="keywordType == null">
                AND (
                mte.title like concat('%', #{keyword}, '%')
                OR mtec.content like concat('%', #{keyword}, '%')
                OR EXISTS (
                SELECT 1
                FROM mailbox_task_email_attachment mtea
                LEFT JOIN mailbox_task_attachment mta ON mtea.attachment_id = mta.id
                WHERE mte.id = mtea.email_id
                AND mta.name LIKE CONCAT('%', #{keyword}, '%')
                )
                )
            </if>
            <if test="keywordType != null">
                <if test="keywordType == 1">
                    AND mte.title like concat('%', #{keyword}, '%')
                </if>
                <if test="keywordType == 2">
                    AND mtec.content like concat('%', #{keyword}, '%')
                </if>
                <if test="keywordType == 3">
                    AND EXISTS (
                    SELECT 1
                    FROM mailbox_task_email_attachment mtea
                    LEFT JOIN mailbox_task_attachment mta ON mtea.attachment_id = mta.id
                    WHERE mte.id = mtea.email_id
                    AND mta.name LIKE CONCAT('%', #{keyword}, '%')
                    )
                </if>
            </if>
        </if>
    </select>

    <select id="customerEmailList" resultType="com.ruoyi.email.domain.vo.EmailListVO">
        SELECT
            mte.id,
            mte.type,
            mte.status,
            mte.task_id AS taskId,
            mte.fromer,
            mte.receiver,
            mte.folder_id AS folderId,
            mte.title,
            mte.send_date AS sendDate,
            mte.read_flag AS readFlag,
            mte.pending_flag AS pendingFlag,
            mte.pending_time AS pendingTime,
            mte.fixed_flag AS fixedFlag,
            mte.spam_flag AS spamFlag,
            mtec.content
        FROM
            customer_customer_contact ccc
            LEFT JOIN mailbox_task_email mte ON ccc.email = mte.fromer
            LEFT JOIN mailbox_task mt ON mte.task_id = mt.id
            OR mte.receiver LIKE concat( '%"email":"', ccc.email, '"%' )
            OR mte.bcc LIKE concat( '%"email":"', ccc.email, '"%' )
            OR mte.cc LIKE concat( '%"email":"', ccc.email, '"%' )
            LEFT JOIN mailbox_task_email_content mtec ON mte.id = mtec.email_id
        WHERE
            ccc.customer_id = #{customerId}
            AND mt.create_id = #{createId}
            AND mt.del_flag = '0'
            AND ccc.del_flag = '0'
            AND mte.del_flag = '0'
            <if test="attachmentFlag != null and attachmentFlag == true">
                AND EXISTS (
                SELECT 1
                FROM mailbox_task_email_attachment mtea
                WHERE mte.id = mtea.email_id
                )
            </if>
            <if test="fixedFlag != null and fixedFlag == true">
                AND mte.fixed_flag = true
            </if>
            <if test="type != null">
                AND mte.type = #{type}
            </if>
            <!-- 联系人筛选 -->
            <if test="emailList != null and emailList.size() > 0">
                AND (
                    mte.fromer IN
                    <foreach item="email" collection="emailList" open="(" separator="," close=")">
                        #{email}
                    </foreach>
                    OR
                    <foreach item="email" collection="emailList" separator=" OR ">
                        mte.receiver LIKE concat( '%"email":"', #{email}, '"%' )
                        OR mte.bcc LIKE concat( '%"email":"', #{email}, '"%' )
                        OR mte.cc LIKE concat( '%"email":"', #{email}, '"%' )
                    </foreach>
                )
            </if>
           <!-- 标签筛选 -->
            <if test="labelIdList != null and labelIdList.size() > 0">
                AND EXISTS (
                    SELECT 1
                    FROM mailbox_task_email_label mtl
                    WHERE mte.id = mtl.email_id
                    AND mtl.label_id IN
                    <foreach item="labelId" collection="labelIdList" open="(" separator="," close=")">
                        #{labelId}
                    </foreach>
                )
            </if>
            <!-- 邮件标题、正文、附件名筛选 -->
            <if test="keyword != null and keyword != ''">
                <if test="keywordType == null">
                    AND (
                        mte.title like concat('%', #{keyword}, '%')
                        OR mtec.content like concat('%', #{keyword}, '%')
                        OR EXISTS (
                            SELECT 1
                            FROM mailbox_task_email_attachment mtea
                            LEFT JOIN mailbox_task_attachment mta ON mtea.attachment_id = mta.id
                            WHERE mte.id = mtea.email_id
                            AND mta.name LIKE CONCAT('%', #{keyword}, '%')
                        )
                    )
                </if>
                <if test="keywordType != null">
                    <if test="keywordType == 1">
                        AND mte.title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="keywordType == 2">
                        AND mtec.content like concat('%', #{keyword}, '%')
                    </if>
                    <if test="keywordType == 3">
                        AND EXISTS (
                        SELECT 1
                        FROM mailbox_task_email_attachment mtea
                        LEFT JOIN mailbox_task_attachment mta ON mtea.attachment_id = mta.id
                        WHERE mte.id = mtea.email_id
                        AND mta.name LIKE CONCAT('%', #{keyword}, '%')
                        )
                    </if>
                </if>
            </if>
        ORDER BY
            mte.send_date DESC
            LIMIT #{offset}, #{limit}
    </select>

    <select id="countByEmlFileParam" resultType="java.lang.Integer">
        select count(*) from mailbox_task_email where task_id = #{taskId} and folder_id = #{folderId} and title = #{title} and send_date = #{sendDate} and del_flag = '0'
    </select>

    <select id="getContactEmailList" resultType="java.lang.String">
        select ccc.email from customer_customer cc
        left join customer_customer_contact ccc on cc.id = ccc.customer_id
        where cc.id = #{customerId} and cc.del_flag = '0' and ccc.del_flag = '0'
    </select>

    <select id="countRepliedWithinFourDays" resultType="java.lang.Integer">
        select count(mte.id) from mailbox_task mt
        left join mailbox_task_email mte on mt.id = mte.task_id
        where mte.type = 2 and  mt.del_flag = '0' and mte.del_flag = '0'
        and mt.account = #{fromer}
        and mt.create_id = #{createId}
        and mte.uid LIKE concat(#{uidPrefix}, '%')
        and (mte.receiver LIKE concat( '%"email":"', #{receiver}, '"%' )
            OR mte.bcc LIKE concat( '%"email":"', #{receiver}, '"%' )
            OR mte.cc LIKE concat( '%"email":"', #{receiver}, '"%' ))
          AND <![CDATA[ DATEDIFF(NOW(), mte.send_date) <= 4 ]]>
    </select>

    <select id="countCustomerContactByFromer" resultType="java.lang.Integer">
        select count(distinct (cc.id)) from customer_customer cc
        left join customer_customer_contact ccc on cc.id = ccc.customer_id
        where ccc.email = #{fromer} and cc.del_flag = '0' and ccc.del_flag = '0' and cc.sea_type = #{seaType} and cc.create_id = #{createId}
        <if test="packetId == null">
            and cc.packet_id = #{packetId}
        </if>
    </select>

    <select id="dealingEmailList" resultType="com.ruoyi.email.domain.bo.DealingEmailListBO">
        SELECT mte.id, mte.type, mte.send_date as sendDate, mte.title, mtec.content, ml.id as labelId, ml.name as labelName, ml.color as labelColor, ml.type as labelType
        FROM mailbox_task mt
        LEFT JOIN mailbox_task_email mte ON mt.id = mte.task_id
        LEFT JOIN mailbox_task_email_content mtec ON mte.id = mtec.email_id
        LEFT JOIN mailbox_task_email_label mtel ON mte.id = mtel.email_id
        LEFT JOIN mailbox_label ml ON mtel.label_id = ml.id
        WHERE mt.del_flag = '0'
        AND mte.del_flag = '0'
        AND mt.create_id = #{createId}
        <if test="contactEmails != null and contactEmails.size() > 0">
            AND (
            <foreach item="email" collection="contactEmails" separator=" OR ">
                mte.receiver LIKE concat( '%"email":"', #{email}, '"%' )
                OR mte.bcc LIKE concat( '%"email":"', #{email}, '"%' )
                OR mte.cc LIKE concat( '%"email":"', #{email}, '"%' )
            </foreach>
            OR mt.account IN
            <foreach item="email" collection="contactEmails" open="(" separator="," close=")">
                #{email}
            </foreach>
            )
        </if>
        order by mte.send_date desc
    </select>
    <select id="detail" resultType="com.ruoyi.email.domain.vo.EmailDetailVO">
        SELECT
            mte.id, mte.type, mte.status, mte.task_id as taskId, mte.uid, mte.fromer, mte.receiver, mte.bcc, mte.cc, mte.folder, mte.folder_id as folderId, mte.title,
            mte.send_date as sendDate, mte.eml_path as emlPath, mte.read_flag as readFlag, mte.pending_flag as pendingFlag, mte.pending_time as pendingTime,
            mte.fixed_flag as fixedFlag, mte.spam_flag as spamFlag, mte.message_id as messageId, mte.in_reply_to as inReplyTo, mte.reference, mtec.content
        FROM mailbox_task_email mte
        LEFT JOIN mailbox_task_email_content mtec ON mte.id = mtec.email_id
        WHERE mte.id = #{id}
    </select>

    <select id="selectByUnSentStatus" resultMap="TaskEmailResult">
        <include refid="selectTaskEmailVo"/>
         where task_id = #{taskId} and status = 2 and del_flag = '0' and type = 2
    </select>

    <select id="selectTaskEmailByTaskIds" resultMap="TaskEmailResult">
        <include refid="selectTaskEmailVo"/>
        WHERE task_id IN
        <foreach item="taskId" collection="taskIds" open="(" separator="," close=")">
            #{taskId}
        </foreach>
        AND type = #{type}
        <if test="folderId != null">
            AND folder_id = #{folderId}
        </if>
        AND del_flag = '0'
    </select>

    <insert id="insertTaskEmail" parameterType="TaskEmail" useGeneratedKeys="true" keyProperty="id">
        insert into mailbox_task_email
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">task_id,</if>
            <if test="type != null">type,</if>
            <if test="uid != null and uid != ''">uid,</if>
            <if test="fromer != null and fromer != ''">fromer,</if>
            <if test="receiver != null">receiver,</if>
            <if test="bcc != null">bcc,</if>
            <if test="cc != null">cc,</if>
            <if test="folder != null">folder,</if>
            <if test="folderId != null">folder_id,</if>
            <if test="title != null">title,</if>
            <if test="sendDate != null">send_date,</if>
            <if test="emlPath != null">eml_path,</if>
            <if test="status != null">status,</if>
            <if test="traceFlag != null">trace_flag,</if>
            <if test="delayedTxFlag != null">delayed_tx_flag,</if>
            <if test="recipientTimeZone != null">recipient_time_zone,</if>
            <if test="recipientLocalTime != null">recipient_local_time,</if>
            <if test="readFlag != null">read_flag,</if>
            <if test="pendingFlag != null">pending_flag,</if>
            <if test="pendingTime != null">pending_time,</if>
            <if test="fixedFlag != null">fixed_flag,</if>
            <if test="spamFlag != null">spam_flag,</if>
            <if test="messageId != null">message_id,</if>
            <if test="inReplyTo != null">in_reply_to,</if>
            <if test="reference != null">reference,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createId != null">create_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateId != null">update_id,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="type != null">#{type},</if>
            <if test="uid != null and uid != ''">#{uid},</if>
            <if test="fromer != null and fromer != ''">#{fromer},</if>
            <if test="receiver != null">#{receiver},</if>
            <if test="bcc != null">#{bcc},</if>
            <if test="cc != null">#{cc},</if>
            <if test="folder != null">#{folder},</if>
            <if test="folderId != null">#{folderId},</if>
            <if test="title != null">#{title},</if>
            <if test="sendDate != null">#{sendDate},</if>
            <if test="emlPath != null">#{emlPath},</if>
            <if test="status != null">#{status},</if>
            <if test="traceFlag != null">#{traceFlag},</if>
            <if test="delayedTxFlag != null">#{delayedTxFlag},</if>
            <if test="recipientTimeZone != null">#{recipientTimeZone},</if>
            <if test="recipientLocalTime != null">#{recipientLocalTime},</if>
            <if test="readFlag != null">#{readFlag},</if>
            <if test="pendingFlag != null">#{pendingFlag},</if>
            <if test="pendingTime != null">#{pendingTime},</if>
            <if test="fixedFlag != null">#{fixedFlag},</if>
            <if test="spamFlag != null">#{spamFlag},</if>
            <if test="messageId != null">#{messageId},</if>
            <if test="inReplyTo != null">#{inReplyTo},</if>
            <if test="reference != null">#{reference},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createId != null">#{createId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateId != null">#{updateId},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateTaskEmail" parameterType="TaskEmail">
        update mailbox_task_email
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="uid != null and uid != ''">uid = #{uid},</if>
            <if test="fromer != null and fromer != ''">fromer = #{fromer},</if>
            <if test="receiver != null">receiver = #{receiver},</if>
            <if test="bcc != null">bcc = #{bcc},</if>
            <if test="cc != null">cc = #{cc},</if>
            <if test="folder != null">folder = #{folder},</if>
            <if test="folderId != null">folder_id = #{folderId},</if>
            <if test="title != null">title = #{title},</if>
            <if test="sendDate != null">send_date = #{sendDate},</if>
            <if test="emlPath != null">eml_path = #{emlPath},</if>
            <if test="status != null">status = #{status},</if>
            <if test="traceFlag != null">trace_flag = #{traceFlag},</if>
            <if test="delayedTxFlag != null">delayed_tx_flag = #{delayedTxFlag},</if>
            <if test="recipientTimeZone != null">recipient_time_zone = #{recipientTimeZone},</if>
            <if test="recipientLocalTime != null">recipient_local_time = #{recipientLocalTime},</if>
            <if test="readFlag != null">read_flag = #{readFlag},</if>
            <if test="pendingFlag != null">pending_flag = #{pendingFlag},</if>
            <if test="pendingTime != null">pending_time = #{pendingTime},</if>
            <if test="fixedFlag != null">fixed_flag = #{fixedFlag},</if>
            <if test="spamFlag != null">spam_flag = #{spamFlag},</if>
            <if test="messageId != null">message_id = #{messageId},</if>
            <if test="inReplyTo != null">in_reply_to = #{inReplyTo},</if>
            <if test="reference != null">reference = #{reference},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateId != null">update_id = #{updateId},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateFixedFlag">
        update mailbox_task_email set fixed_flag=#{fixedFlag} where id=#{id} and del_flag = '0'
    </update>

    <update id="removeTaskEmailIds">
        update mailbox_task_email set update_id = #{updateId}, update_by = #{updateBy}, update_time = #{updateTime}, del_flag = '2'
        where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach> and del_flag = '0'
    </update>

    <update id="updateStatusById">
        update mailbox_task_email set status = #{status}, message_id = #{messageId} where id = #{id} and del_flag = '0'
    </update>

    <update id="batchUpdateReadFlag">
        update mailbox_task_email set read_flag=#{readFlag} where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach> and del_flag = '0'
    </update>

    <update id="batchUpdateSpamFlag">
        update mailbox_task_email set spam_flag=#{spamFlag} where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach> and del_flag = '0'
    </update>

    <update id="batchUpdateFolderId">
        update mailbox_task_email set folder_id=#{folderId} where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach> and del_flag = '0'
    </update>
    <update id="updateTaskSendEmailStatus">
        update mailbox_task_email set status = 2
        WHERE task_id = #{taskId} and type = 2
        AND status = 1
        AND del_flag = '0'
        AND COALESCE(recipient_local_time, '1970-01-01') &lt; NOW()
    </update>

    <delete id="deleteTaskEmailById" parameterType="Long">
        delete from mailbox_task_email where id = #{id}
    </delete>

    <delete id="deleteTaskEmailByIds" parameterType="String">
        delete from mailbox_task_email where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach> and del_flag = '0'
    </delete>
</mapper>