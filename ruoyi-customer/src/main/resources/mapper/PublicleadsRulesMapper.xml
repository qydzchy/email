<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.customer.mapper.PublicleadsRulesMapper">
    
    <resultMap type="PublicleadsRules" id="PublicleadsRulesResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="days"    column="days"    />
        <result property="type"    column="type"    />
        <result property="status"    column="status"    />
        <result property="startTime"    column="start_time"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createId"    column="create_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateId"    column="update_id"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPublicleadsRulesVo">
        select id, name, days, type, status, start_time, del_flag, create_id, create_by, create_time, update_id, update_by, update_time from customer_publicleads_rules
    </sql>

    <select id="selectPublicleadsRulesList" parameterType="PublicleadsRules" resultMap="PublicleadsRulesResult">
        <include refid="selectPublicleadsRulesVo"/>
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="days != null "> and days = #{days}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="createId != null "> and create_id = #{createId}</if>
            <if test="updateId != null "> and update_id = #{updateId}</if>
            and del_flag = '0'
        </where>
    </select>
    
    <select id="selectPublicleadsRulesById" parameterType="Long" resultMap="PublicleadsRulesResult">
        <include refid="selectPublicleadsRulesVo"/>
        where id = #{id}
    </select>

    <select id="list" resultType="com.ruoyi.customer.domain.vo.PublicleadsRulesListVO">
        select cpr.id, cpr.name, cpr.days, cpr.type, cpr.status, cpr.start_time as startTime, cpr.create_id as createId, cpr.create_time as createTime, GROUP_CONCAT(cprs.segment_id) as segmentIds
        from customer_publicleads_rules cpr
        left join customer_publicleads_rules_segment cprs on cprs.publicleads_rules_id = cpr.id
        where cpr.del_flag = '0'
    </select>

    <select id="enableSegmentList" resultType="com.ruoyi.customer.domain.vo.CustomerPublicleadsRulesVO">
        select cpr.id, cpr.name, cpr.start_time as startTime, GROUP_CONCAT(cs.name) as segmentNames from customer_publicleads_rules cpr
        left join customer_publicleads_rules_segment cprs on cprs.publicleads_rules_id = cpr.id
        left join customer_segment cs on cs.id = cprs.segment_id and cs.del_flag = '0'
        where cpr.del_flag = '0' and cpr.status = 1
    </select>

    <insert id="insertPublicleadsRules" parameterType="PublicleadsRules" useGeneratedKeys="true" keyProperty="id">
        insert into customer_publicleads_rules
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="days != null">days,</if>
            <if test="type != null">type,</if>
            <if test="status != null">status,</if>
            <if test="startTime != null">start_time,</if>
            <if test="delFlag != null and delFlag != ''">del_flag,</if>
            <if test="createId != null">create_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateId != null">update_id,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="days != null">#{days},</if>
            <if test="type != null">#{type},</if>
            <if test="status != null">#{status},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
            <if test="createId != null">#{createId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateId != null">#{updateId},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePublicleadsRules" parameterType="PublicleadsRules">
        update customer_publicleads_rules
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="days != null">days = #{days},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="delFlag != null and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateId != null">update_id = #{updateId},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="deletePublicleadsRulesById">
        update customer_publicleads_rules set del_flag = '2', update_id = #{updateId}, update_by = #{updateBy}, update_time = NOW() where id = #{id}
    </update>

    <delete id="deletePublicleadsRulesByIds" parameterType="String">
        delete from customer_publicleads_rules where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>